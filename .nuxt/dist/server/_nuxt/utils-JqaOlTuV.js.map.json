{"file":"utils-JqaOlTuV.js","mappings":";;;;;;;AAUA,eAAsB,aAAa;AACjC,QAAM,SAAS,iBAAiB;AAChC,QAAM,EAAE,MAAM,UAAU,IAAI,MAAM;AAAA,IAAqB;AAAA,IAAS,MAC9D,OAAO,GAAG,OAAO,OAAO,UAAU,aAAa;AAAA,EACjD;AACO,SAAA;AACT;AAEgB,SAAA,gBAAgB,SAAiB,WAA2B;AAC1E,QAAM,cAAc,QAAQ,QAAQ,YAAY,EAAE;AAC9C,MAAA,YAAY,UAAU,WAAW;AAC5B,WAAA;AAAA,EAAA;AAET,SAAO,YAAY,MAAM,GAAG,SAAS,IAAI;AAC3C;","names":[],"sources":["../../../../utils/js/utils.ts"],"sourcesContent":["import { useAsyncData, useRuntimeConfig } from '#app'\n\ninterface Post {\n  id: number\n  title: string\n  slug: string\n  body: string\n  image: string\n}\n\nexport async function fetchPosts() {\n  const config = useRuntimeConfig()\n  const { data: itemsPost } = await useAsyncData<Post[]>('posts', () =>\n    $fetch(`${config.public.apiBaseUrl}/json-posts`)\n  )\n  return itemsPost\n}\n\nexport function truncateContent(content: string, maxLength: number): string {\n  const textContent = content.replace(/<[^>]*>/g, '')\n  if (textContent.length <= maxLength) {\n    return textContent\n  }\n  return textContent.slice(0, maxLength) + '...'\n}\n"],"version":3}